# Pre-commit configuration for Overlay Companion MCP
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: \.py$
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        files: \.py$
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: \.py$
        args: ["-r", ".", "-f", "json"]
        exclude: ^tests/

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
        files: \.(yaml|yml)$
      - id: check-json
        files: \.json$
      - id: check-toml
        files: \.toml$
      - id: check-xml
        files: \.xml$
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: detect-private-key

  # C# formatting (if dotnet-format is available)
  - repo: local
    hooks:
      - id: dotnet-format
        name: dotnet-format
        entry: bash -c 'cd src && dotnet format --verbosity minimal'
        language: system
        files: \.(cs|csproj)$
        pass_filenames: false

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        files: \.md$
        args: ["--fix"]

  # Spell checking
  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v8.14.4
    hooks:
      - id: cspell
        files: \.md$
        args: ["--no-progress"]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        exclude: \.lock$|\.min\.js$|\.min\.css$

  # Git commit message linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [feat, fix, docs, style, refactor, test, chore, ci]
